blogdown:::serve_site()
Sys.time()
Sys.time()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(readr)
blogdown:::serve_site()
blogdown:::serve_site()
library(ggplot2)
library(zoo)
blogdown:::serve_site()
data<-read_csv("feeds.csv")
data$Date<-as.POSIXct(strptime(data$Date, format="%Y-%M-%d %H:%M:%S"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
pwd()
getwd()
library(readr)
library(zoo)
data<-read_csv("/data/seeds.csv")
library(readr)
library(zoo)
data<-read_csv("/data/seeds.csv")
library(readr)
library(zoo)
data<-read_csv("seeds.csv")
blogdown:::serve_site()
data<-read_csv("seeds.csv")
data<-read_csv("/content/post/seeds.csv")
data<-read_csv("/content/post/seeds.csv")
data<-read_csv("content/post/seeds.csv")
data$Date<-as.POSIXct(strptime(data$Date, format="%d/%M/%y"))
str(data)
data$Date<-as.Date(data$Date, format="%d/%M/%y"))
data$Date<-as.Date(data$Date, format="%d/%M/%y"))
data<-read_csv("content/post/seeds.csv")
library(readr)
data<-read_csv("content/post/seeds.csv")
data$Date<-as.Date(data$Date, format="%d/%M/%y"))
data$Date<-as.Date(data$Date, format="%d/%M/%y")
str(data)
data$Date<-as.Date(data$Date, format="%d/%M/%Y")
str(data)
data$Date<-as.Date(data$Date, format="%d/%m/%Y")
str(data)
library(ggplot2)
T<-ggplot(data, aes(Date), group = Treatment) +
geom_line(aes(y = Seeds.germinated)) +
theme_bw()
T + ylab("Seed number"") + xlab ("Date")
library(ggplot2)
T<-ggplot(data, aes(Date), group = Treatment) +
geom_line(aes(y = Seeds.germinated)) +
theme_bw()
T + ylab("Seed number") + xlab ("Date")
library(ggplot2)
T<-ggplot(data, aes(Date), group = Treatment) +
geom_line(aes(y = Seeds germinated)) +
theme_bw()
T + ylab("Seed number") + xlab ("Date")
library(ggplot2)
T<-ggplot(data, aes(Date), group = Treatment) +
geom_line(aes(y = "Seeds germinated")) +
theme_bw()
T + ylab("Seed number") + xlab ("Date")
T<-ggplot(data, aes(x=Date, y= Seeds germinated, group = Treatment)) +
geom_line() +
theme_bw()
T<-ggplot(data=data, aes(x=Date, y= Seeds germinated, group = Treatment)) +
geom_line() +
theme_bw()
T<-ggplot(data=data, aes(x="Date", y= "Seeds germinated", group = "Treatment")) +
geom_line() +
theme_bw()
T
data<-read_csv("content/post/seeds.csv")
str(data)
T<-ggplot(data=data, aes(x=date, y=seeds, group = treatment)) +
geom_line() +
theme_bw()
T
T<-ggplot(data=data, aes(x=date, y=seeds, colour=treatment)) +
geom_line() +
theme_bw()
T
T<-ggplot(data=data, aes(x=date, y=seeds, colour=treatment)) +
geom_point() +
theme_bw()
T
T<-ggplot(data=data, aes(x=date, y=seeds, colour=treatment)) +
geom_line()+
geom_point() +
theme_bw()
T
data<-read_csv("content/post/seeds.csv")
library(ggplot2)
T<-ggplot(data=data, aes(x=treatment, y=seeds, colour=treatment)) +
geom_bar(stat="identity")+
theme_bw()
T + ylab("Seed number") + xlab ("Treatment")
T<-ggplot(data=data, aes(x=treatment, y=seeds, fill=treatment)) +
geom_bar(stat="identity")+
theme_bw()
T + ylab("Seed number") + xlab ("Treatment")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
## Check if you have version 0.5.7 or newer
## I actually used version 0.5.9 for this blog post
packageVersion('blogdown')
## If not, then get it!
##### If necessary:
## install.packages('devtools')
devtools::install_github('rstudio/blogdown')
install.packages('devtools')
devtools::install_github('rstudio/blogdown')
packaeVersion('blogdown')
packageVersion('blogdown')
devtools::install_github('rstudio/blogdown')
packageVersion('blogdown')
install.packages("digest")
install.packages("digest")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library("blogdown", lib.loc="~/R/win-library/3.4")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
x
blogdown:::serve_site()
library(lubridate)
today="2018-01-16"
today=ymd(today)
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(3)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
install.packages("DT")
harvet_now=if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print ("Not ready")
}
harvet_now= for (i) in plants{
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print ("Not ready")
}
}
harvet_now= for (date in plants){
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print ("Not ready")
}
}
for (date in plants){
if(plants$`Harvest Date`>=today()){
harvet_now= ("Harvest")
}else{
harvet_now= ("Not ready")
}
}
library(tidyverse)
for (date in len(plants)){
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print("Not ready")
}
print (date)
}
for (date in length(plants)){
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print("Not ready")
}
print (date)
}
for (date in length(plants)){
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print("Not ready")
}
}
for (date in (plants[1])){
if(plants$`Harvest Date`>=today()){
print("Harvest")
}else{
print("Not ready")
}
}
plants%>%
mutate(now=(`Harvest Date`>=today()=1))
plants%>%
mutate(now=(`Harvest Date`>=today()))
View(plants)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(2)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
plants%>%
mutate(now=(`Harvest Date`>=today()))
today="2019-01-16"
today=ymd(today)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(2)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
plants%>%
mutate(now=(`Harvest Date`>=today()))
plants%>%
mutate(now=(`Harvest Date`<=today()))
plants=plants%>%
mutate(now=(`Harvest Date`<=today(), label="YES"))
plants=plants%>%
mutate(now=(`Harvest Date`<=today()))
plants%>%
mutate(if(now==FALSE){test="hi"}else{test="t"})
plants%>%
mutate((now==FALSE){test="hi"}else{test="t"})
datatable(plants) %>% formatStyle(
'Harvest Date',
backgroundColor = styleInterval(c(today()), c('white', 'yellow'))
)
plants%>%
mutate(test=if(now==FALSE){test="hi"}else{test="t"})
h2=today+years(0)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
plants=plants%>%
mutate(now=(`Harvest Date`<=today()))
plants%>%
mutate(test=if(now==FALSE){test="hi"}else{test="t"})
plants=plants%>%
mutate(now=(`Harvest Date`<=today()))
plants%>%
mutate(test=if(now==FALSE){test="hi"}else{test="t"})
library(lubridate)
#install.packages("DT")
today="2019-01-16"
today=ymd(today)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(0)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(3)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date Sown", "Harvest Date")
str(plants)
plants2=plants%>%
mutate(test=(if `Harvest Date` >= today()){print "hi"}else{print "t"}))
library(tidyverse)
plants2=plants%>%
mutate(test=(if `Harvest Date` >= today()){print "hi"}else{print "t"}))
plants2=plants%>%
mutate(test=(if Harvest Date >= today()){print "hi"}else{print "t"}))
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today+years(3)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
str(plants)
plants2=plants%>%
mutate(test=(if(Harvest_Date>= today()){test= "hi"}else{test= "t"}))
View(plants2)
plants2=plants%>%
mutate(test=(if(Harvest_Date> today()){test= "hi"}else{test= "t"}))
harv=(today+months(6))
h2=today+years(0)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
plants2=plants%>%
mutate(test=(if(Harvest_Date> today()){test= "hi"}else{test= "t"}))
View(plants2)
h2=today-years(1))
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
str(plants)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today-years(1)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
str(plants)
plants2=plants%>%
mutate(test=(if(Harvest_Date > today()){test= "hi"}else{test= "t"}))
View(plants2)
plants2=plants%>%
summarise(test=(if(Harvest_Date > today()){test= "hi"}else{test= "t"}))
today()
Harvest_Date >= today()
plants2=plants%>%
mutate(ready=case_when(Harvest_Date >= today() ~ "Not yet", TRUE~"Harvest"))
library(DT)
datatable(plants2) %>% formatStyle(
'Harvest_Date',
backgroundColor = styleInterval(c(plants2$ready), c('white', 'yellow'))
)
datatable(plants2) %>% formatStyle(
'Harvest_Date',
backgroundColor = styleEqual(c(plants2$ready), c('white', 'yellow'))
)
datatable(plants2) %>% formatStyle(
'Harvest_Date',
backgroundColor = styleEqual(c(unique(plants2$ready)), c('white', 'yellow'))
)
plants2$ready
datatable(iris) %>%
formatStyle('Sepal.Length', fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
'Sepal.Width',
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
'Petal.Length',
background = styleColorBar(iris$Petal.Length, 'steelblue'),
backgroundSize = '100% 90%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center'
) %>%
formatStyle(
'Species',
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(iris$Species), c('lightblue', 'lightgreen', 'lightpink')
)
)
datatable(plants2) %>% formatStyle(
'Harvest_Date',
backgroundColor = styleEqual((unique(plants2$ready)), c('white', 'yellow'))
)
datatable(iris) %>%
formatStyle(
'Species',
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(iris$Species), c('lightblue', 'lightgreen', 'lightpink')
)
)
datatable(plants2) %>% formatStyle("Harvest_Date",
backgroundColor = styleEqual(unique(plants2$ready), c('lightblue', 'yellow'))
)
datatable(plants2) %>% formatStyle("Harvest_Date",
backgroundColor = styleEqual(unique(plants2$Harvest_Date), c('lightblue', 'yellow'))
)
datatable(plants2) %>% formatStyle("ready",
backgroundColor = styleEqual(unique(plants2$Harvest_Date), c('lightblue', 'yellow'))
)
datatable(plants2) %>% formatStyle("ready",
backgroundColor = styleEqual(c("Not yet", "Harvest"), c('lightblue', 'yellow'))
)
shiny::runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
View(plants2)
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
shiny::runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
runApp('~/shiny/harvestapp')
today="2019-01-16"
today=ymd(today)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today-years(1)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
plants2=plants%>%
mutate(ready=case_when(Harvest_Date >= today() ~ "Not yet", TRUE~"Harvest"))
runApp('~/shiny/harvestapp')
library(lubridate)
library(tidyverse)
#install.packages("DT")
today="2019-01-16"
today=ymd(today)
#Make dataframe
veg=c("Onions", "Garlic", "Asparagus")
sown=c(today)
harv=(today+months(6))
h2=today-years(1)
harvest=c(harv,harv,h2)
plants=data.frame(veg,sown,harvest)
names(plants)=c("Vegetable", "Date_Sown", "Harvest_Date")
str(plants)
library(DT)
plants2=plants%>%
mutate(ready=case_when(Harvest_Date >= today() ~ "Not yet", TRUE~"Harvest"))
datatable(plants2) %>% formatStyle("ready",
backgroundColor = styleEqual(c("Not yet", "Harvest"), c('white', 'yellow'))
)
runApp('~/shiny/harvestapp')
install.packages("RMySQL")
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='GardenR.2018', dbname='plants', host='host')
mydb = dbConnect(MySQL(), user='root', password='GardenR.2018', dbname='plants', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='GardenR.2018', dbname='Local instance MySQL80', host='localhost')
myHost <- '127.0.0.1'
myUsername = 'root'
myDbname = 'plants'
myPort = 3306
myPassword = GardenR.2018
myPassword = 'GardenR.2018'
con = dbConnect(m, user= myUsername, host= myHost, password= myPassword, dbname= myDbname, port= myPort)
con = dbConnect(MySQL(), user= myUsername, host= myHost, password= myPassword, dbname= myDbname, port= myPort)
con = dbConnect(MySQL(), user= myUsername, host= myHost, password= GardenR.2018, dbname= myDbname, port= myPort)
con = dbConnect(MySQL(), user= myUsername, host= myHost, password= 'GardenR.2018', dbname= myDbname, port= myPort)
myUsername = 'emma'
con = dbConnect(MySQL(), user= myUsername, host= myHost, password= 'GardenR.2018', dbname= myDbname, port= myPort)
runApp('~/shiny/harvestapp')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
x=1
